// <auto-generated />
using System;
using BuyOrderCalc.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BuyOrderCalc.EntityFramework.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201004115947_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6");

            modelBuilder.Entity("BuyOrderCalc.Domain.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ApiId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MarketPrice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReorderLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SupplyTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SupplyTypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("BuyOrderCalc.Domain.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ItemTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Unclassified"
                        },
                        new
                        {
                            Id = 2,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Mineral"
                        },
                        new
                        {
                            Id = 3,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Planetary"
                        },
                        new
                        {
                            Id = 4,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Debt"
                        },
                        new
                        {
                            Id = 5,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Wallet"
                        });
                });

            modelBuilder.Entity("BuyOrderCalc.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BuyOrderCalc.Domain.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("FixedCorpCreditPercent")
                        .HasColumnType("REAL");

                    b.Property<int>("FixedUnitPrice")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("BuyOrderCalc.Domain.SupplyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CorpCreditPercent")
                        .HasColumnType("REAL");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PricePercentModifier")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SupplyType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CorpCreditPercent = 2.0,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "High",
                            PricePercentModifier = 80
                        },
                        new
                        {
                            Id = 2,
                            CorpCreditPercent = 3.0,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Low",
                            PricePercentModifier = 90
                        },
                        new
                        {
                            Id = 3,
                            CorpCreditPercent = 4.0,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Emergency",
                            PricePercentModifier = 105
                        },
                        new
                        {
                            Id = 4,
                            CorpCreditPercent = 0.0,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Unwanted",
                            PricePercentModifier = 1
                        });
                });

            modelBuilder.Entity("BuyOrderCalc.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Avatar")
                        .HasColumnType("TEXT");

                    b.Property<string>("DiscordId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BuyOrderCalc.Domain.Item", b =>
                {
                    b.HasOne("BuyOrderCalc.Domain.SupplyType", "SupplyType")
                        .WithMany()
                        .HasForeignKey("SupplyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuyOrderCalc.Domain.ItemType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BuyOrderCalc.Domain.OrderItem", b =>
                {
                    b.HasOne("BuyOrderCalc.Domain.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BuyOrderCalc.Domain.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
